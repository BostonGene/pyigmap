// Global default params, used in configs
params {
    fq1                        = null
    fq2                        = null
    reads                      = 'all'
    zenodo                     = false
    zenodo_link                = 'https://zenodo.org/records/11103555/files/'
    outdir                     = './results'

    // Fastp params
    insert_size = 1
    out_fastp_fq1              = 'mR1.fastq.gz'
    out_fastp_fq2              = 'mR2.fastq.gz'
    out_fastp_fq12             = 'mR12.fastq.gz'
    out_fastp_json             = 'fastp.json'
    out_fastp_html             = 'fastp.html'
    out_stat_json              = 'stat.json'

    // Vidjil params
    vidjil_ref                 = './steps/vidjil/vidjil.germline.tar.gz'
    out_vidjil_fasta           = 'vidjil.fasta.gz'
    out_vidjil_logs            = 'vidjil.log'

    // IgBlast params
    igblast_receptor           = 'all'
    igblast_organism           = 'human'
    all_alleles                = false
    out_igblast_annotation     = 'raw_annotation.tsv.gz'
    params.igblast_ref         = params.all_alleles ? './steps/igblast/igblast.reference.all_alleles.tar.gz' : \
                                                      './steps/igblast/igblast.reference.major_allele.tar.gz'

    // CDR3ErrorCorrector params
    pgen_threshold             = 0
    clonotype_collapse_factor  = 0.05
    olga_models                = './steps/cdr3nt_error_corrector/olga-models.tar.gz'
    out_corrected_annotation   = 'corrected_annotation.tsv'
    out_archive                = 'pyigmap.tar.gz'
    only_functional            = true
    only_canonical             = true
    remove_chimeras            = true
}

def filters_list = []

if (params.only_functional) {
    filters_list.add('--only-functional')
}

if (params.only_canonical) {
    filters_list.add('--only-canonical')
}

if (params.remove_chimeras) {
    filters_list.add('--remove-chimeras')
}

params.enabled_filters         = filters_list.join(" ")

process {
    withName:GetLinks {
        container = 'downloader-image'
    }
    withName:Download {
        container = 'downloader-image'
        publishDir = [
            path: "${params.outdir}/downloader",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:Downsample {
        container = 'downloader-image'
        publishDir = [
            path: "${params.outdir}/downsample",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:CalibDedup {
        container = 'calib_dedup-image'
        publishDir = [
            path: "${params.outdir}/calib_dedup",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:Fastp {
        container = 'fastp-image'
        publishDir = [
            path: "${params.outdir}/fastp",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:Vidjil {
        container = 'vidjil-image'
        publishDir = [
            path: "${params.outdir}/vidjil",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:IgBlast {
        container = 'igblast-image'
        publishDir = [
            path: "${params.outdir}/igblast",
            enabled: false,
            mode: 'copy'
        ]
    }
    withName:CDR3ErrorCorrector {
        container = 'cdr3nt_error_corrector-image'
        publishDir = [
            path: params.outdir,
            mode: 'copy'
        ]
    }
}

profiles {
    docker {
        docker.enabled = true
        docker.remove = true
        podman.enabled = false
        podman.remove = false
    }
    podman {
        docker.enabled = false
        docker.remove = false
        podman.enabled = true
        podman.remove = true
    }
}

manifest {
    name            = 'bostongene/pyigmap'
    defaultBranch   = 'main'
    homePage        = 'https://github.com/bostongene/pyigmap'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.10.1'
    doi             = '10.5281/zenodo.11103554'
}
